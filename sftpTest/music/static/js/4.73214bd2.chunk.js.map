{"version":3,"sources":["static/bg1.png","component/sliderWarpper.tsx","component/playLIstWrapper.tsx","pages/home/home.tsx"],"names":["module","exports","ScrollWarpper","props","useState","setBScroll","wrapperEl","useRef","useEffect","current","scroll","BScroll","click","console","log","ref","style","height","window","innerHeight","overflow","children","ItemWrapper","styled","div","PlayListView","history","useHistory","width","col","onClick","push","pathname","info","id","className","src","picUrl","alt","name","Math","round","playCount","Sidebar","BgSider","bg1","p","color","ScrollContent","HomeView","store","Store","useContainer","isShow","toggleShow","imgList","setList","playList","setPlayList","http","get","then","res","banners","catch","e","result","handleClick","SidebarComponent","themColor","Item","arrow","position","top","left","display","icon","type","onLeftClick","backgroundColor","rightContent","key","minHeight","document","documentElement","clientHeight","contentStyle","textAlign","paddingTop","sidebar","open","onOpenChange","autoplay","infinite","beforeChange","from","to","afterChange","index","map","val","imageUrl","verticalAlign","flexWrap","item","isPlaying"],"mappings":"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","file":"static/js/4.73214bd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg1.24c650ba.png\";","import React, { useState, useEffect,useRef } from 'react';\r\nimport BScroll from 'better-scroll'\r\n\r\nconst ScrollWarpper = (props:any) => {\r\n    // console.log(props)\r\n    const [bScroll, setBScroll] = useState<any>();\r\n\r\n    const wrapperEl  = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(()=>{\r\n        if(wrapperEl.current){\r\n            let scroll = new BScroll(wrapperEl.current,{click: true})\r\n            console.log(scroll)\r\n            setBScroll(scroll);\r\n        }\r\n    },[])\r\n\r\n    \r\n\r\n    return <div  ref={wrapperEl} style={{height:`${window.innerHeight-45}px`,overflow:'hidden'}}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default ScrollWarpper","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ItemWrapper = styled.div`\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n    position: relative;\r\n\r\n    &>.itemCount{\r\n        height:40px;\r\n        width:92%;\r\n        position: absolute;\r\n        top:5px;\r\n        display: block;\r\n        line-height: 40px;\r\n        direction: rtl;\r\n        color: #fff;\r\n        background: linear-gradient(180deg,rgba(0,0,0,.35) 0,rgba(0,0,0,.2) 80%,transparent);\r\n    }\r\n\r\n    & > .itemHeader{\r\n        & > img{\r\n            width:100%;\r\n        }\r\n    }\r\n   \r\n`\r\n\r\nconst PlayListView = (props:any)=>{\r\n\r\n    let history = useHistory()\r\n    // console.log(props)\r\n\r\n    // onClick={()=>{history.push({pathname :`/playList/${props.info.id}`})}}\r\n    return <ItemWrapper style={{width:props.col===3?'50%':'33.3%'}}  onClick={()=>{history.push({pathname :`/playList/${props.info.id}`})}}>\r\n        <div className='itemHeader'>\r\n            <img src={props.info.picUrl} alt={props.info.name}/>\r\n        </div>\r\n        <div>\r\n        {props.info.name}\r\n        </div>\r\n        <div className='itemCount'>{Math.round((props.info.playCount ||1)/10000)}万次</div>\r\n    </ItemWrapper>\r\n}\r\n\r\nexport default PlayListView","import React, { useState, useEffect } from 'react';\r\nimport { Drawer, NavBar, List, Icon, Carousel } from 'antd-mobile';\r\nimport ScrollWarpper from '../../component/sliderWarpper'\r\nimport PlayLIstItem from '../../component/playLIstWrapper'\r\nimport styled from 'styled-components'\r\nimport bg1 from '../../static/bg1.png'\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Store } from \"../../store/index\";\r\n\r\n\r\n\r\n// @ts-ignore\r\nimport http from '../../apis/http'\r\n\r\n\r\ninterface Props {\r\n    color: string;\r\n}\r\n\r\ninterface ResType {\r\n    code: number;\r\n    banners: []\r\n}\r\n\r\ninterface ResListType {\r\n    code: number;\r\n    result: []\r\n}\r\n\r\ninterface ImgType {\r\n    imageUrl: string;\r\n}\r\n\r\n\r\nconst Sidebar = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    z-index: 89;\r\n`\r\nconst BgSider = styled.div<Props>`\r\n    height: 45vw;\r\n    text-align: center;\r\n    line-height: 44.44444vw;\r\n    width: 60vw;\r\n    opacity: .8;\r\n    background-image: url(${bg1});\r\n    background-position: 50%;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-color: ${p => p.color}\r\n`\r\n\r\nconst ScrollContent = styled.div`\r\n\r\n    // &::after{\r\n    //     content:'';\r\n    //     display:block;\r\n    //     clear:both;\r\n    // }\r\n`\r\n\r\nconst HomeView: React.FC = (props) => {\r\n    const history = useHistory()\r\n\r\n    const store = Store.useContainer()\r\n    const [isShow, toggleShow] = useState(false);\r\n    const [imgList, setList] = useState([])\r\n    const [playList, setPlayList] = useState([])\r\n\r\n    useEffect(() => {\r\n        http.get<ResType>('banner').then((res: ResType) => {\r\n            setList(res.banners)\r\n        }).catch((e: any) => console.log(e))\r\n\r\n        http.get<ResType>('personalized').then((res: ResListType) => {\r\n            setPlayList(res.result)\r\n        }).catch((e: any) => console.log(e))\r\n    }, [])\r\n\r\n\r\n    const handleClick = () => {\r\n        console.log(isShow)\r\n        isShow ? toggleShow(false) : toggleShow(true)\r\n    }\r\n\r\n    const SidebarComponent = <Sidebar><BgSider color={store.themColor} /><List><List.Item arrow=\"horizontal\" onClick={() => history.push('/skin')}>皮肤中心</List.Item></List></Sidebar>\r\n\r\n    return (\r\n        <div style={{ position: 'fixed', top: 0, left: 0, height: '100vh', width: '100vw', display: 'inline-block' }}>\r\n            <NavBar\r\n                icon={<Icon type='ellipsis'></Icon>}\r\n                onLeftClick={() => handleClick()}\r\n                style={{ backgroundColor: store.themColor }}\r\n                rightContent={[\r\n                    <Icon key=\"0\" type=\"search\" onClick={() => history.push('/search')} />,\r\n                ]}\r\n\r\n            >\r\n                music\r\n            </NavBar>\r\n            <Drawer\r\n                style={{ minHeight: document.documentElement.clientHeight * 0.8, top: '45px' }}\r\n                contentStyle={{ color: '#A6A6A6', textAlign: 'center', paddingTop: 0 }}\r\n                sidebar={SidebarComponent}\r\n                open={isShow}\r\n                onOpenChange={() => handleClick()}\r\n            >\r\n                <div>\r\n\r\n\r\n                    <ScrollWarpper>\r\n                        <ScrollContent className='content'>\r\n                            <h3></h3>\r\n                            <div>\r\n                                <Carousel\r\n                                    autoplay={false}\r\n                                    infinite={false}\r\n                                    beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\r\n                                    afterChange={index => console.log('slide to', index)}\r\n                                >\r\n                                    {\r\n                                        imgList.map((val: ImgType, key) => (\r\n                                            <a\r\n                                                key={key}\r\n                                                style={{ display: 'inline-block', width: '100%', height: \"100%\" }}\r\n                                            >\r\n                                                <img\r\n                                                    src={val.imageUrl}\r\n                                                    alt=\"\"\r\n                                                    style={{ width: '100%', verticalAlign: 'top' }}\r\n                                                />\r\n                                            </a>\r\n                                        ))\r\n                                    }\r\n                                </Carousel>\r\n                            </div>\r\n                            <h3>\r\n                                排行\r\n                            </h3>\r\n                            <div style={{ flexWrap: 'wrap', display: 'flex' }}>\r\n                                {playList.map((item: any, index) => {\r\n                                    return <PlayLIstItem key={index} info={item} col={2}></PlayLIstItem>\r\n                                })\r\n                                }\r\n                            </div>\r\n                            <div style={{ height: '58px', display: `${store.isPlaying ? 'block' : 'none'}` }}></div>\r\n                        </ScrollContent>\r\n                    </ScrollWarpper>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeView;"],"sourceRoot":""}